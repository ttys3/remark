name: test_backend

on:
  push:
    branches:
    tags:
    paths:
      - '.github/workflows/ci-test-backend.yml'
      - 'backend/**'
      - '!backend/scripts/**'
      - '.golangci.yml'
  pull_request:
    paths:
      - '.github/workflows/ci-test-backend.yml'
      - 'backend/**'
      - '!backend/scripts/**'
      - '.golangci.yml'

jobs:
  backend:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: debug if needed
        run: |
          export DEBUG=${DEBUG:-false}
          if [[ "$DEBUG" == "true" ]]; then
            env
          fi
        env:
          DEBUG: ${{secrets.DEBUG}}

      - name: install go
        uses: actions/setup-go@v1
        with:
          go-version: 1.13

      - name: install golangci-lint and goveralls
        run: |
          curl -sfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh| sh -s -- -b $GITHUB_WORKSPACE v1.23.0
          go get -u github.com/mattn/goveralls

      - name: test and lint backend
        run: |
          go test -timeout=60s -covermode=count -coverprofile=$GITHUB_WORKSPACE/profile.cov_tmp ./...
          cat $GITHUB_WORKSPACE/profile.cov_tmp | grep -v "_mock.go" > $GITHUB_WORKSPACE/profile.cov
          $GITHUB_WORKSPACE/golangci-lint --config ${GITHUB_WORKSPACE}/backend/.golangci.yml run  ./...
        working-directory: backend/app
        env:
          GOFLAGS: "-mod=vendor"
          TZ: "Asia/Hong_Kong"

      - name: tast and lint examples
        run: |
          go version
          $GITHUB_WORKSPACE/golangci-lint version
          go test -race ./...
          $GITHUB_WORKSPACE/golangci-lint --config ${GITHUB_WORKSPACE}/backend/.golangci.yml run ./...
        working-directory: backend/_example/memory_store
        env:
#          GOFLAGS: "-mod=mod"
          TZ: "Asia/Hong_Kong"

      - name: submit coverage
        run: $(go env GOPATH)/bin/goveralls -service="github" -coverprofile=$GITHUB_WORKSPACE/profile.cov
        working-directory: backend
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
